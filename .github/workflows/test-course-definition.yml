name: Test Course Definition

on:
  workflow_call:
    inputs:
      sdkRef:
        required: false
        type: string
        default: main

jobs:
  verify_templates_compiled:
    runs-on: ubuntu-latest

    permissions:
      contents: read

    timeout-minutes: 5

    steps:
      - uses: oven-sh/setup-bun@v2
        with:
          bun-version: 1.2.2 # Error: 1.2.3 breaks course-sdk as of 2025-02-27

      - uses: actions/checkout@v3
        with:
          repository: "codecrafters-io/course-sdk"
          ref: ${{inputs.sdkRef}}

      - uses: actions/checkout@v3
        with:
          path: courses/${{github.event.repository.name}}

      # - uses: depot/setup-action@v1
      # - uses: depot/build-push-action@v1
      #   with:
      #     project: tsp80qbtxw
      #     context: .
      #     load: true
      #     tags: tester:depot

      - run: bun install
      - run: make install

      - run: course-sdk compile
        working-directory: courses/${{github.event.repository.name}}

      - name: "Ensure no uncommitted changes to compiled templates"
        run: git diff --exit-code
        working-directory: courses/${{github.event.repository.name}}

      - name: "Print untracked files"
        run: git ls-files compiled_starters/ --exclude-standard --others
        working-directory: courses/${{github.event.repository.name}}

      - name: "Ensure untracked files are empty (check previous step for list of files)"
        run: test -z "$(git ls-files compiled_starters/ --exclude-standard --others)"
        working-directory: courses/${{github.event.repository.name}}

  lint:
    runs-on: ubuntu-latest

    permissions:
      contents: read

    timeout-minutes: 5

    steps:
      - uses: oven-sh/setup-bun@v2
        with:
          bun-version: 1.2.2 # Error: 1.2.3 breaks course-sdk as of 2025-02-27

      - uses: actions/checkout@v3
        with:
          repository: "codecrafters-io/course-sdk"
          ref: ${{inputs.sdkRef}}

      - uses: actions/checkout@v3
        with:
          path: courses/${{github.event.repository.name}}

      - run: bun install
      - run: make install

      - name: "Lint using course-sdk"
        run: course-sdk lint
        working-directory: courses/${{github.event.repository.name}}

  markdown_lint:
    runs-on: ubuntu-latest

    permissions:
      contents: read

    timeout-minutes: 5

    steps:
      - uses: actions/checkout@v3
        with:
          repository: "codecrafters-io/course-sdk"
          ref: ${{inputs.sdkRef}}

      - uses: actions/checkout@v3
        with:
          path: courses/${{github.event.repository.name}}

      # - uses: depot/setup-action@v1
      # - uses: depot/build-push-action@v1
      #   with:
      #     project: tsp80qbtxw
      #     context: .
      #     load: true
      #     tags: tester:depot

      - run: docker build -t js-tools -f lib/dockerfiles/js-tools.Dockerfile .
      - run: docker compose run js-tools markdownlint --disable MD041 courses/${{github.event.repository.name}}/compiled_starters

  go_lint:
    runs-on: ubuntu-latest
    timeout-minutes: 5

    steps:
      - uses: actions/checkout@v3
        with:
          path: courses/${{github.event.repository.name}}

      - run: test -z $(gofmt -l courses/${{github.event.repository.name}}) || (gofmt -l courses/${{github.event.repository.name}} && exit 1)

  js_lint:
    runs-on: ubuntu-latest

    permissions:
      contents: read

    timeout-minutes: 5

    steps:
      - uses: actions/checkout@v3
        with:
          repository: "codecrafters-io/course-sdk"
          ref: ${{inputs.sdkRef}}

      - uses: actions/checkout@v3
        with:
          path: courses/${{github.event.repository.name}}

      # - uses: depot/setup-action@v1
      # - uses: depot/build-push-action@v1
      #   with:
      #     project: tsp80qbtxw
      #     context: .
      #     load: true
      #     tags: tester:depot

      - run: docker build -t js-tools -f lib/dockerfiles/js-tools.Dockerfile .
      - run: docker compose run js-tools prettier --ignore-path ./.prettierignore --no-error-on-unmatched-pattern --check courses/${{github.event.repository.name}}/**/*.js

  rust_lint:
    runs-on: ubuntu-latest
    timeout-minutes: 5

    steps:
      - uses: actions/checkout@v3
        with:
          repository: "codecrafters-io/course-sdk"
          ref: ${{inputs.sdkRef}}

      - uses: actions/checkout@v3
        with:
          path: courses/${{github.event.repository.name}}

      - run: find courses/${{github.event.repository.name}} -name '*.rs' | xargs rustfmt --edition "2021" --check

  docker_lint:
    runs-on: ubuntu-latest
    timeout-minutes: 5

    env:
      HADOLINT_RECURSIVE: "true"
    steps:
      - uses: actions/checkout@v3

      # Hadolint doesn't support --exclude in COPY commands yet
      # ref: https://github.com/hadolint/language-docker/issues/96
      - run: sed -i '/^COPY /s/--exclude=[^ ]*//g' dockerfiles/*.Dockerfile

      - uses: hadolint/hadolint-action@v3.1.0
        with:
          dockerfile: "*Dockerfile"
          recursive: true
          ignore: "DL3059"

  identify_language_slugs:
    runs-on: ubuntu-latest
    timeout-minutes: 5

    outputs:
      language_slugs: ${{ steps.generate-language-slugs.outputs.language_slugs }}

    steps:
      - uses: actions/checkout@v3

      - name: Generate Language Slugs
        id: generate-language-slugs
        run: |-
          LANGUAGE_SLUGS=$(ls solutions | jq -Rnc '[inputs]')
          echo ::set-output name=language_slugs::${LANGUAGE_SLUGS}

  test:
    runs-on: ubuntu-latest

    permissions:
      contents: read

    timeout-minutes: 20

    needs:
      - identify_language_slugs

    strategy:
      matrix:
        language: ${{ fromJSON(needs.identify_language_slugs.outputs.language_slugs) }}

    steps:
      - uses: oven-sh/setup-bun@v2
        with:
          bun-version: 1.2.2 # Error: 1.2.3 breaks course-sdk as of 2025-02-27

      - uses: actions/checkout@v3
        with:
          repository: "codecrafters-io/course-sdk"
          ref: ${{inputs.sdkRef}}

      - run: bun install
      - run: make install

      - uses: actions/checkout@v3
        with:
          path: courses/${{github.event.repository.name}}

      - run: "echo ::remove-matcher owner=go::" # Messes with our output

      # - uses: depot/setup-action@v1
      # - uses: depot/build-push-action@v1
      #   with:
      #     project: tsp80qbtxw
      #     context: .
      #     load: true
      #     tags: tester:depot

      - run: git config --global user.email "hello@codecrafters.io"
      - run: git config --global user.name "codecrafters-bot"

      - run: course-sdk test ${{matrix.language}}
        working-directory: courses/${{github.event.repository.name}}
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

  validate-schemas:
    runs-on: ubuntu-latest

    permissions:
      contents: read

    timeout-minutes: 5

    steps:
      - uses: actions/checkout@v3
        with:
          repository: "codecrafters-io/course-sdk"
          ref: ${{inputs.sdkRef}}

      - uses: actions/checkout@v3
        with:
          path: courses/${{github.event.repository.name}}

      # - uses: depot/setup-action@v1
      # - uses: depot/build-push-action@v1
      #   with:
      #     project: tsp80qbtxw
      #     context: .
      #     load: true
      #     tags: js-tools

      - run: docker compose run js-tools ajv validate --spec draft2020 -s schemas/course-definition.json -d courses/${{github.event.repository.name}}/course-definition.yml

  validate-stages-naming:
    runs-on: ubuntu-latest
    timeout-minutes: 5

    steps:
      - uses: actions/checkout@v3
        with:
          repository: "codecrafters-io/course-sdk"
          ref: ${{inputs.sdkRef}}

      - uses: actions/checkout@v3
        with:
          path: courses/${{github.event.repository.name}}

      - run: scripts/validate_stages_naming.sh "courses/${{github.event.repository.name}}"
